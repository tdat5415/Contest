{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"음성2의 사본의 사본","provenance":[{"file_id":"11alOV5U0nlrvD8F1MzKEv-kxUobaPm-T","timestamp":1596336826594},{"file_id":"1h-62NJFIHItJhFBvtC663Sutsnn0jcnD","timestamp":1596336676477}],"collapsed_sections":[],"mount_file_id":"1h-62NJFIHItJhFBvtC663Sutsnn0jcnD","authorship_tag":"ABX9TyNByhzRG8ZvK/jYZZ6DXHsr"},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"rMxwjP0gXZUG","colab_type":"code","colab":{}},"source":["# %cp /content/data/train/train_00000.wav /content/drive/My\\ Drive/\n","# %cp /content/data/train/train_00001.wav /content/drive/My\\ Drive/\n","# %cp /content/data/train/train_00002.wav /content/drive/My\\ Drive/\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"JU8mTNqXO3WB","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":89},"executionInfo":{"status":"ok","timestamp":1596336716034,"user_tz":-540,"elapsed":9042,"user":{"displayName":"# TDAT","photoUrl":"","userId":"09923204142859293024"}},"outputId":"b5112ae0-9d46-4d8d-d8e7-71837c701c7d"},"source":["!mkdir -p /content/data/train\n","!mkdir -p /content/data/test\n","%cp /content/drive/My\\ Drive/월간데이콘6\\ 데이터/submission.csv /content/data\n","%cp /content/drive/My\\ Drive/월간데이콘6\\ 데이터/train_answer.csv /content/data\n","!unzip /content/drive/My\\ Drive/월간데이콘6\\ 데이터/test.zip -d /content/data/test/\n","!unzip /content/drive/My\\ Drive/월간데이콘6\\ 데이터/train.zip -d /content/data/train/"],"execution_count":1,"outputs":[{"output_type":"stream","text":["cp: cannot stat '/content/drive/My Drive/월간데이콘6 데이터/submission.csv': No such file or directory\n","cp: cannot stat '/content/drive/My Drive/월간데이콘6 데이터/train_answer.csv': No such file or directory\n","unzip:  cannot find or open /content/drive/My Drive/월간데이콘6 데이터/test.zip, /content/drive/My Drive/월간데이콘6 데이터/test.zip.zip or /content/drive/My Drive/월간데이콘6 데이터/test.zip.ZIP.\n","unzip:  cannot find or open /content/drive/My Drive/월간데이콘6 데이터/train.zip, /content/drive/My Drive/월간데이콘6 데이터/train.zip.zip or /content/drive/My Drive/월간데이콘6 데이터/train.zip.ZIP.\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"jvSON5MGPIe9","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1596336720274,"user_tz":-540,"elapsed":1960,"user":{"displayName":"# TDAT","photoUrl":"","userId":"09923204142859293024"}},"outputId":"d12865b3-cafa-4d71-fdb2-289f1a5c4592"},"source":["import os\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import scipy\n","import tensorflow as tf\n","import keras\n","from tqdm import tqdm\n","from glob import glob\n","# from scipy.io import wavfile\n","from keras.models import Sequential\n","from keras.layers import Dense, Conv2D, MaxPooling2D, Flatten, BatchNormalization, Dropout\n","from keras.callbacks import ModelCheckpoint, EarlyStopping"],"execution_count":2,"outputs":[{"output_type":"stream","text":["Using TensorFlow backend.\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"ykXfUsaWPIot","colab_type":"code","colab":{}},"source":["import librosa\n","import multiprocessing as mp\n","\n","def data_loader_as_image(file):\n","  sr=16000\n","  S, _ = librosa.load(file, sr=sr)\n","  S = librosa.feature.melspectrogram(S, sr=sr, n_mels=32)\n","  log_S = librosa.amplitude_to_db(S, ref=np.max)\n","  log_S = (log_S+100)/100\n","\n","  return log_S\n","\n","def multi_loader(func, arr):\n","    if __name__ == '__main__':\n","        with mp.Pool(processes = mp.cpu_count()) as pool:\n","            ttt = list(tqdm(pool.imap(func, arr)))\n","    \n","    return np.array(ttt)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"hEjBfZkFDO5h","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1596336787168,"user_tz":-540,"elapsed":2858,"user":{"displayName":"# TDAT","photoUrl":"","userId":"09923204142859293024"}}},"source":["import librosa\n","\n","def data_loader_as_image2(files):\n","  out=[]\n","  sr=16000\n","  for file in tqdm(files):\n","    S, _ = librosa.load(file, sr=sr)\n","    S = librosa.feature.melspectrogram(S, sr=sr, n_mels=512)##############\n","    log_S = librosa.amplitude_to_db(S, ref=np.max)\n","    log_S = (log_S+80)/80\n","    out.append(log_S)\n","  out = np.array(out)\n","\n","  return out"],"execution_count":3,"outputs":[]},{"cell_type":"code","metadata":{"id":"FUVJ33colM8G","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"outputId":"1624adec-bf43-4b6c-a289-f0d5c328054b"},"source":["# Wav 파일로부터 Feature를 만듭니다.\n","train_x = sorted(glob('data/train/*.wav'))#[:100]\n","#x_data = multi_loader(data_loader_as_image, x_data)\n","train_x = data_loader_as_image2(train_x)\n","\n","# 훈련데이터를 저장소에 저장합니다\n","np.save('/content/drive/My Drive/Files/train_x_512', train_x)"],"execution_count":null,"outputs":[{"output_type":"stream","text":[" 37%|███▋      | 37037/100000 [5:44:11<14:36:22,  1.20it/s]"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"bCTMwFNB0UsC","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1596282114062,"user_tz":-540,"elapsed":11742,"user":{"displayName":"# TDAT","photoUrl":"","userId":"09923204142859293024"}},"outputId":"7fc9393d-a33b-4cb4-d6dc-21293e9cb821"},"source":["#훈련데이터를 저장소에서 불러옵니다\n","train_x = np.load('/content/drive/My Drive/Files/train_x.npy')\n","\n","# 훈련데이터 정답 값을 불러옵니다\n","train_y = pd.read_csv('data/train_answer.csv', index_col=0)\n","train_y = train_y.values\n","\n","# Feature, Label Shape을 확인합니다.\n","print(train_x.shape)\n","print(train_y.shape)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((100000, 32, 32), (100000, 30))"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"code","metadata":{"id":"x9_NJwyC_Nss","colab_type":"code","colab":{}},"source":["# Wav 파일로부터 Feature를 만듭니다.\n","test_x = sorted(glob('data/test/*.wav'))#[:100]\n","#x_data = multi_loader(data_loader_as_image, x_data)\n","test_x = data_loader_as_image2(test_x)\n","\n","# 테스트데이터를 저장소에 저장합니다.\n","np.save('/content/drive/My Drive/Files/test_x_512', test_x)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"kh-YY5QOdaNY","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1596282348864,"user_tz":-540,"elapsed":5247,"user":{"displayName":"# TDAT","photoUrl":"","userId":"09923204142859293024"}},"outputId":"e2b533a1-6f24-4611-b53b-5abe87897429"},"source":["# 테스트데이터를 저장소에서 불러옵니다.\n","test_x = np.load('/content/drive/My Drive/Files/test_x.npy')\n","\n","# Feature Shape을 확인합니다.\n","print(test_x.shape)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(10000, 32, 32)"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"code","metadata":{"id":"AJXbTJ6gBMES","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":53},"executionInfo":{"status":"ok","timestamp":1596285347837,"user_tz":-540,"elapsed":894,"user":{"displayName":"# TDAT","photoUrl":"","userId":"09923204142859293024"}},"outputId":"e9fb12d8-1071-4503-e423-88288b6b7e08"},"source":["train_x = train_x.reshape(-1, 32, 32, 1)\n","test_x = test_x.reshape(-1, 32, 32, 1)\n","\n","print(train_x.shape)\n","print(test_x.shape)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["(100000, 32, 32, 1)\n","(10000, 32, 32, 1)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"LeO6hya1PIdd","colab_type":"code","colab":{}},"source":["# 모델을 만듭니다.\n","model = Sequential()\n","\n","model.add(Conv2D(64, (3,3), activation='relu', input_shape=(32, 32, 1)))\n","model.add(BatchNormalization())\n","# model.add(Conv2D(32, (3,3), activation='relu'))\n","# model.add(BatchNormalization())\n","model.add(MaxPooling2D())\n","model.add(Dropout(rate=0.2))\n","# shape(-1, 32, 16, 16, 1)\n","\n","model.add(Conv2D(128, (3,3), activation='relu'))\n","model.add(BatchNormalization())\n","# model.add(Conv2D(64, (3,3), activation='relu'))\n","# model.add(BatchNormalization())\n","model.add(MaxPooling2D())\n","model.add(Dropout(rate=0.2))\n","# shape(-1, 64, 8, 8, 1)\n","\n","model.add(Conv2D(256, (3,3), activation='relu'))\n","model.add(BatchNormalization())\n","# model.add(Conv2D(128, (3,3), activation='relu'))\n","# model.add(BatchNormalization())\n","model.add(MaxPooling2D())\n","model.add(Dropout(rate=0.2))\n","# # shape(-1, 128, 4, 4, 1)\n","\n","# model.add(Conv2D(256, (3,3), activation='relu'))\n","# model.add(BatchNormalization())\n","# model.add(Conv2D(256, (3,3), activation='relu'))\n","# model.add(BatchNormalization())\n","# model.add(MaxPooling2D())\n","model.add(Dropout(rate=0.2))\n","# # # shape(-1, 256, 2, 2, 1)\n","\n","model.add(Flatten()) # shape(-1, 512)\n","# model.add(Dense(800, activation='relu'))\n","# model.add(BatchNormalization())\n","# model.add(Dropout(rate=0.3))\n","\n","model.add(Dense(500, activation='relu'))\n","model.add(BatchNormalization())\n","model.add(Dropout(rate=0.5))\n","\n","# model.add(Dense(300, activation='relu'))\n","# model.add(BatchNormalization())\n","# model.add(Dropout(rate=0.3))\n","\n","# model.add(Dense(100, activation='relu'))\n","# model.add(BatchNormalization())\n","# model.add(Dropout(rate=0.3))\n","\n","model.add(Dense(30, activation='softmax'))\n","model.compile(loss=tf.keras.losses.KLDivergence(), optimizer='adam')\n","\n","#model.add(BatchNormalization())"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"OVffAruI75nd","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1596297455950,"user_tz":-540,"elapsed":564852,"user":{"displayName":"# TDAT","photoUrl":"","userId":"09923204142859293024"}},"outputId":"18c40352-af74-41f7-e2a0-e5674e33ea2a"},"source":["!rm -r /content/model\n","\n","# 모델 폴더를 생성합니다.\n","model_path = 'model/'\n","if not os.path.exists(model_path):\n","  os.mkdir(model_path)\n","\n","# Validation 점수가 가장 좋은 모델만 저장합니다.\n","model_file_path = model_path + 'Epoch_{epoch:03d}_Val_{val_loss:.3f}.hdf5'\n","checkpoint = ModelCheckpoint(filepath=model_file_path, monitor='val_loss', verbose=1, save_best_only=True)\n","\n","# 10회 간 Validation 점수가 좋아지지 않으면 중지합니다.\n","early_stopping = EarlyStopping(monitor='val_loss', patience=10)\n","\n","# 모델을 학습시킵니다.\n","history = model.fit(\n","    train_x, train_y, \n","    epochs=100, batch_size=256, validation_split=0.2, shuffle=True,\n","    callbacks=[checkpoint, early_stopping]\n",")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Train on 80000 samples, validate on 20000 samples\n","Epoch 1/100\n","80000/80000 [==============================] - 10s 123us/step - loss: 2.2479 - val_loss: 2.3830\n","\n","Epoch 00001: val_loss improved from inf to 2.38297, saving model to model/Epoch_001_Val_2.383.hdf5\n","Epoch 2/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.7216 - val_loss: 1.8616\n","\n","Epoch 00002: val_loss improved from 2.38297 to 1.86157, saving model to model/Epoch_002_Val_1.862.hdf5\n","Epoch 3/100\n","80000/80000 [==============================] - 9s 113us/step - loss: 1.6065 - val_loss: 1.5530\n","\n","Epoch 00003: val_loss improved from 1.86157 to 1.55298, saving model to model/Epoch_003_Val_1.553.hdf5\n","Epoch 4/100\n","80000/80000 [==============================] - 9s 115us/step - loss: 1.5410 - val_loss: 1.4785\n","\n","Epoch 00004: val_loss improved from 1.55298 to 1.47854, saving model to model/Epoch_004_Val_1.479.hdf5\n","Epoch 5/100\n","80000/80000 [==============================] - 9s 113us/step - loss: 1.4907 - val_loss: 1.4013\n","\n","Epoch 00005: val_loss improved from 1.47854 to 1.40131, saving model to model/Epoch_005_Val_1.401.hdf5\n","Epoch 6/100\n","80000/80000 [==============================] - 9s 113us/step - loss: 1.4501 - val_loss: 1.3821\n","\n","Epoch 00006: val_loss improved from 1.40131 to 1.38207, saving model to model/Epoch_006_Val_1.382.hdf5\n","Epoch 7/100\n","80000/80000 [==============================] - 9s 113us/step - loss: 1.4153 - val_loss: 1.3357\n","\n","Epoch 00007: val_loss improved from 1.38207 to 1.33565, saving model to model/Epoch_007_Val_1.336.hdf5\n","Epoch 8/100\n","80000/80000 [==============================] - 9s 113us/step - loss: 1.3843 - val_loss: 1.3804\n","\n","Epoch 00008: val_loss did not improve from 1.33565\n","Epoch 9/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.3585 - val_loss: 1.2580\n","\n","Epoch 00009: val_loss improved from 1.33565 to 1.25797, saving model to model/Epoch_009_Val_1.258.hdf5\n","Epoch 10/100\n","80000/80000 [==============================] - 9s 113us/step - loss: 1.3351 - val_loss: 1.2534\n","\n","Epoch 00010: val_loss improved from 1.25797 to 1.25342, saving model to model/Epoch_010_Val_1.253.hdf5\n","Epoch 11/100\n","80000/80000 [==============================] - 9s 114us/step - loss: 1.3145 - val_loss: 1.2374\n","\n","Epoch 00011: val_loss improved from 1.25342 to 1.23737, saving model to model/Epoch_011_Val_1.237.hdf5\n","Epoch 12/100\n","80000/80000 [==============================] - 9s 114us/step - loss: 1.2988 - val_loss: 1.2707\n","\n","Epoch 00012: val_loss did not improve from 1.23737\n","Epoch 13/100\n","80000/80000 [==============================] - 9s 115us/step - loss: 1.2793 - val_loss: 1.3135\n","\n","Epoch 00013: val_loss did not improve from 1.23737\n","Epoch 14/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.2666 - val_loss: 1.2104\n","\n","Epoch 00014: val_loss improved from 1.23737 to 1.21037, saving model to model/Epoch_014_Val_1.210.hdf5\n","Epoch 15/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.2529 - val_loss: 1.1597\n","\n","Epoch 00015: val_loss improved from 1.21037 to 1.15972, saving model to model/Epoch_015_Val_1.160.hdf5\n","Epoch 16/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.2408 - val_loss: 1.2300\n","\n","Epoch 00016: val_loss did not improve from 1.15972\n","Epoch 17/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.2314 - val_loss: 1.1703\n","\n","Epoch 00017: val_loss did not improve from 1.15972\n","Epoch 18/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.2207 - val_loss: 1.2345\n","\n","Epoch 00018: val_loss did not improve from 1.15972\n","Epoch 19/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.2115 - val_loss: 1.1794\n","\n","Epoch 00019: val_loss did not improve from 1.15972\n","Epoch 20/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.2039 - val_loss: 1.1822\n","\n","Epoch 00020: val_loss did not improve from 1.15972\n","Epoch 21/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.1976 - val_loss: 1.1462\n","\n","Epoch 00021: val_loss improved from 1.15972 to 1.14616, saving model to model/Epoch_021_Val_1.146.hdf5\n","Epoch 22/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.1920 - val_loss: 1.1734\n","\n","Epoch 00022: val_loss did not improve from 1.14616\n","Epoch 23/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.1827 - val_loss: 1.2011\n","\n","Epoch 00023: val_loss did not improve from 1.14616\n","Epoch 24/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.1754 - val_loss: 1.1720\n","\n","Epoch 00024: val_loss did not improve from 1.14616\n","Epoch 25/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.1734 - val_loss: 1.2051\n","\n","Epoch 00025: val_loss did not improve from 1.14616\n","Epoch 26/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.1677 - val_loss: 1.1098\n","\n","Epoch 00026: val_loss improved from 1.14616 to 1.10983, saving model to model/Epoch_026_Val_1.110.hdf5\n","Epoch 27/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.1623 - val_loss: 1.1064\n","\n","Epoch 00027: val_loss improved from 1.10983 to 1.10641, saving model to model/Epoch_027_Val_1.106.hdf5\n","Epoch 28/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.1568 - val_loss: 1.1011\n","\n","Epoch 00028: val_loss improved from 1.10641 to 1.10109, saving model to model/Epoch_028_Val_1.101.hdf5\n","Epoch 29/100\n","80000/80000 [==============================] - 9s 111us/step - loss: 1.1519 - val_loss: 1.1746\n","\n","Epoch 00029: val_loss did not improve from 1.10109\n","Epoch 30/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.1513 - val_loss: 1.1239\n","\n","Epoch 00030: val_loss did not improve from 1.10109\n","Epoch 31/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.1467 - val_loss: 1.1196\n","\n","Epoch 00031: val_loss did not improve from 1.10109\n","Epoch 32/100\n","80000/80000 [==============================] - 9s 113us/step - loss: 1.1405 - val_loss: 1.1032\n","\n","Epoch 00032: val_loss did not improve from 1.10109\n","Epoch 33/100\n","80000/80000 [==============================] - 9s 115us/step - loss: 1.1396 - val_loss: 1.1221\n","\n","Epoch 00033: val_loss did not improve from 1.10109\n","Epoch 34/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.1359 - val_loss: 1.1716\n","\n","Epoch 00034: val_loss did not improve from 1.10109\n","Epoch 35/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.1316 - val_loss: 1.0781\n","\n","Epoch 00035: val_loss improved from 1.10109 to 1.07811, saving model to model/Epoch_035_Val_1.078.hdf5\n","Epoch 36/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.1274 - val_loss: 1.1802\n","\n","Epoch 00036: val_loss did not improve from 1.07811\n","Epoch 37/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.1279 - val_loss: 1.0857\n","\n","Epoch 00037: val_loss did not improve from 1.07811\n","Epoch 38/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.1261 - val_loss: 1.0937\n","\n","Epoch 00038: val_loss did not improve from 1.07811\n","Epoch 39/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.1213 - val_loss: 1.0865\n","\n","Epoch 00039: val_loss did not improve from 1.07811\n","Epoch 40/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.1202 - val_loss: 1.0740\n","\n","Epoch 00040: val_loss improved from 1.07811 to 1.07403, saving model to model/Epoch_040_Val_1.074.hdf5\n","Epoch 41/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.1153 - val_loss: 1.1531\n","\n","Epoch 00041: val_loss did not improve from 1.07403\n","Epoch 42/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.1148 - val_loss: 1.0913\n","\n","Epoch 00042: val_loss did not improve from 1.07403\n","Epoch 43/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.1117 - val_loss: 1.1215\n","\n","Epoch 00043: val_loss did not improve from 1.07403\n","Epoch 44/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.1092 - val_loss: 1.1072\n","\n","Epoch 00044: val_loss did not improve from 1.07403\n","Epoch 45/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.1080 - val_loss: 1.1271\n","\n","Epoch 00045: val_loss did not improve from 1.07403\n","Epoch 46/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.1037 - val_loss: 1.0731\n","\n","Epoch 00046: val_loss improved from 1.07403 to 1.07306, saving model to model/Epoch_046_Val_1.073.hdf5\n","Epoch 47/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.1041 - val_loss: 1.0619\n","\n","Epoch 00047: val_loss improved from 1.07306 to 1.06188, saving model to model/Epoch_047_Val_1.062.hdf5\n","Epoch 48/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.1000 - val_loss: 1.0962\n","\n","Epoch 00048: val_loss did not improve from 1.06188\n","Epoch 49/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.1002 - val_loss: 1.0650\n","\n","Epoch 00049: val_loss did not improve from 1.06188\n","Epoch 50/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.0977 - val_loss: 1.1408\n","\n","Epoch 00050: val_loss did not improve from 1.06188\n","Epoch 51/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.0971 - val_loss: 1.0501\n","\n","Epoch 00051: val_loss improved from 1.06188 to 1.05011, saving model to model/Epoch_051_Val_1.050.hdf5\n","Epoch 52/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.0941 - val_loss: 1.0474\n","\n","Epoch 00052: val_loss improved from 1.05011 to 1.04735, saving model to model/Epoch_052_Val_1.047.hdf5\n","Epoch 53/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.0939 - val_loss: 1.1048\n","\n","Epoch 00053: val_loss did not improve from 1.04735\n","Epoch 54/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.0914 - val_loss: 1.0570\n","\n","Epoch 00054: val_loss did not improve from 1.04735\n","Epoch 55/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.0889 - val_loss: 1.1342\n","\n","Epoch 00055: val_loss did not improve from 1.04735\n","Epoch 56/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.0900 - val_loss: 1.0773\n","\n","Epoch 00056: val_loss did not improve from 1.04735\n","Epoch 57/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.0858 - val_loss: 1.0765\n","\n","Epoch 00057: val_loss did not improve from 1.04735\n","Epoch 58/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.0845 - val_loss: 1.0665\n","\n","Epoch 00058: val_loss did not improve from 1.04735\n","Epoch 59/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.0848 - val_loss: 1.0493\n","\n","Epoch 00059: val_loss did not improve from 1.04735\n","Epoch 60/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.0829 - val_loss: 1.0612\n","\n","Epoch 00060: val_loss did not improve from 1.04735\n","Epoch 61/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.0814 - val_loss: 1.0912\n","\n","Epoch 00061: val_loss did not improve from 1.04735\n","Epoch 62/100\n","80000/80000 [==============================] - 9s 112us/step - loss: 1.0792 - val_loss: 1.0530\n","\n","Epoch 00062: val_loss did not improve from 1.04735\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"sZO4Ykn8-Jcb","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":279},"executionInfo":{"status":"ok","timestamp":1596296836627,"user_tz":-540,"elapsed":1034,"user":{"displayName":"# TDAT","photoUrl":"","userId":"09923204142859293024"}},"outputId":"ea837802-edd2-439a-b6a9-f5bdfb9ff2e2"},"source":["# 훈련 결과를 확인합니다.\n","plt.plot(history.epoch, history.history['loss'], '-o', label='training_loss')\n","plt.plot(history.epoch, history.history['val_loss'], '-o', label='validation_loss')\n","plt.legend()\n","plt.xlim(left=0)\n","plt.xlabel('epochs')\n","plt.ylabel('loss')\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"tedtS5aZdxa2","colab_type":"code","colab":{}},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"fuXSR8uUdxdR","colab_type":"code","colab":{}},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"hFWk2fFgdxfS","colab_type":"code","colab":{}},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"WiOK5ner-NQs","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1596296553043,"user_tz":-540,"elapsed":1875,"user":{"displayName":"# TDAT","photoUrl":"","userId":"09923204142859293024"}},"outputId":"2e132028-011e-41c8-a7c7-1c9fab7aa61e"},"source":["# # 검증 wav 파일로부터 Feature를 만듭니다.\n","# x_test = sorted(glob('data/test/*.wav'))\n","# x_test = data_loader(x_test)\n","# x_test = x_test / 30000\n","# x_test = x_test[:, ::8]\n","# x_test = x_test.reshape(x_test.shape[0], x_test.shape[1], 1)\n","\n","# 가장 좋은 모델의 weight를 불러옵니다.\n","weigth_file = sorted(glob('model/*.hdf5'))[-1]\n","print(weigth_file)\n","# model.load_weights(weigth_file)\n","model.load_weights('/content/model/Epoch_028_Val_-1.316.hdf5')\n","\n","# 예측 수행\n","y_hat = model.predict(test_x)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["model/Epoch_091_Val_1.008.hdf5\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"4ftVQo2J-NSa","colab_type":"code","colab":{}},"source":["# 예측 결과로 제출 파일을 생성합니다.\n","submission = pd.read_csv('data/submission.csv', index_col=0)\n","submission.loc[:, :] = y_hat\n","submission.to_csv('submission2.csv')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Uq7BaWpl-NUg","colab_type":"code","colab":{}},"source":["!rm -r /content/model"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"DKRcYdMJ-NXD","colab_type":"code","colab":{}},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"bo2g5sZw-Jer","colab_type":"code","colab":{}},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"YmgqTg-Z-Jg1","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":208},"executionInfo":{"status":"error","timestamp":1596291139225,"user_tz":-540,"elapsed":579725,"user":{"displayName":"# TDAT","photoUrl":"","userId":"09923204142859293024"}},"outputId":"e6580044-cfcb-4fd7-d959-7ecd50d3a257"},"source":["from time import sleep\n","while True:\n","  sleep(1)"],"execution_count":null,"outputs":[{"output_type":"error","ename":"KeyboardInterrupt","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-38-680f9f678cea>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtime\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0msleep\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;32mwhile\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m   \u001b[0msleep\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}]}]}